[versions]
kotlin = "1.8.0"
spring-boot = "3.0.2"
spring-framework = "6.0.4"
spring-cloud = "4.0.0"
okhttp3 = "4.10.0"
junit = "5.9.2"
jackson = "2.14.1"
slf4j = "2.0.6"
hapi = "6.2.5"
springdoc = "2.0.2"
micrometer = "1.10.3"
http4k = "4.37.0.0"
kotlinx = "0.8.0"

[plugins]
gradle-versions = { id = "com.github.ben-manes.versions", version = "0.44.0"}
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

[libraries]
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }

spring-framework-web = { module = "org.springframework:spring-web", version.ref = "spring-framework" }
spring-framework-context = { module = "org.springframework:spring-context", version.ref = "spring-framework" }
spring-framework-tx = { module = "org.springframework:spring-tx", version.ref = "spring-framework" }

spring-boot-boot = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }

spring-cloud-vault-config = { module = "org.springframework.cloud:spring-cloud-starter-vault-config", version.ref = "spring-cloud" }

spring-ext-mockk = "com.ninja-squad:springmockk:4.0.0"
spring-ext-reactor = "org.projectreactor:reactor-spring:1.0.1.RELEASE"

springdoc-openapi = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdoc" }
springdoc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

okhttp3-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp3-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }

liquibase-core = "org.liquibase:liquibase-core:4.19.0"
liquibase-jakarta = "jakarta.xml.bind:jakarta.xml.bind-api:4.0.0"

slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

logback-core = "ch.qos.logback:logback-core:1.4.5"
logback-encoder = "net.logstash.logback:logstash-logback-encoder:7.2"

jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

fhir-ucum = "org.fhir:ucum:1.0.3"

aws-secretsmanager = "com.amazonaws.secretsmanager:aws-secretsmanager-caching-java:1.0.2"

hapi-base = { module = "ca.uhn.hapi.fhir:hapi-fhir-base", version.ref = "hapi" }
hapi-r4 = { module = "ca.uhn.hapi.fhir:hapi-fhir-structures-r4", version.ref = "hapi" }

micrometer-cloudwatch2 = { module = "io.micrometer:micrometer-registry-cloudwatch2", version.ref = "micrometer" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
assertj = "org.assertj:assertj-core:3.24.2"
caffeine = "com.github.ben-manes.caffeine:caffeine:3.1.2"
mockk = "io.mockk:mockk:1.13.3"
bouncycastle = "org.bouncycastle:bcprov-jdk15on:1.70"
postgres = "org.postgresql:postgresql:42.5.1"

result = "com.michael-bull.kotlin-result:kotlin-result:1.1.16"

guava = "com.google.guava:guava:31.1-jre"

kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinx" }

# http4k-bom isn't really necessary anymore, the versions are all the same so a ref will suffice
http4k-core = { module = "org.http4k:http4k-core", version.ref = "http4k" }
http4k-server-netty = { module = "org.http4k:http4k-server-netty", version.ref = "http4k" }
http4k-client-apache = { module = "org.http4k:http4k-client-apache", version.ref = "http4k" }

opencsv = "com.opencsv:opencsv:5.7.1"

[bundles]
liquibase = ["liquibase-core", "liquibase-jakarta"]
# use exclusionsTestImplementation()
test-implementation = ["junit-jupiter-api", "assertj", "jackson-jsr310", "mockk"]

test-runtime = ["junit-jupiter-engine", "fhir-ucum", "caffeine", "slf4j-simple", "logback-core"]

# use exclusionsSpringTestImplementation()
test-spring-implementation = [
    "junit-jupiter-api",
    "assertj",
    "jackson-jsr310",
    "spring-ext-mockk",
    "spring-boot-starter-test"
]

# use exclusionsSpringTestRuntime()
test-spring-runtime = ["junit-jupiter-engine", "fhir-ucum", "caffeine"]
